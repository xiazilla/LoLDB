FORMAT: 1A
HOST: LoLDBAPI.APPSPOT.COM

# LoLDBAPI

LoLDBAPI is a simple and friendly-to-use API allowing the League of Legends developer community to access to all League of Legend game data in the most convenient way possible.


## Champions [/api/champs]

*id (integer PK)* : the primary key for identifying the champion

*image (string)* : the link to the icon of the champion

*lore (string)* : the background story of the champion

*name (string)* : the name of the champion

*passive (dict[dict])* : the passive ability of the champion

*recommended (List[ItemID])* : provides recommended item builds for the champion based on map

*skins (List[dict])* : the list of skins of the champion

*spells (List[dict])* : the list of abilities of the champion

*stats (dict)* : provides information about base stats and stat scaling on the champion

*title (string)* : the title of the champion

### Get All Champions [GET /api/champs]

*Description: Fetches a list of JSON for all champions. (List[dict])*

+ Response 200 (application/json)

        {
            "result": [
                {
                    "id": "1234544321",
                    "stats": [
                        "health": 1234,
                        "attackDamage": 341,
                        ...
                    ]
                    "recommended" : 
                        "items": [
                            {
                                "count": 1,
                                "id": "Duskbalde"
                            },
                            {
                                "count": 1,
                                "id": "BoTRK"
                            },
                            {
                                "count": 3,
                                "id": "Potions"
                            }
                        ],
                    "lore": "..."
                    ...
                },
                {
                    "id": "4293472123",
                    "stats": [
                        "health": 1234,
                        "attackDamage": 341,
                        ...
                    ]
                    "recommended" : 
                        "items": [
                            {
                                "count": 1,
                                "id": "Duskbalde"
                            },
                            {
                                "count": 1,
                                "id": "BoTRK"
                            },
                            {
                                "count": 3,
                                "id": "Potions"
                            }
                        ],
                    "lore": "..."
                    ...
                },
                {
                    "etc.." : info
                }
            ]
        }

+ Response 404 (application/json)

        { 
            "error": "Resource not found"
        }

### Get Specific Champion [GET /api/champs/{championName}]

*Description: Fetches a JSON for a specific champion. (dict)*

+ Parameters
    + championName (string, required)  - champion name separated by %20 with key capitalization for the first letter of each word

+ Response 200 (application/json)

        {
            "result": [
                {
                    "id": "1234452134",
                    "recommended" : 
                        "items": [
                            {
                                "count": 1,
                                "name": "BoTRK"
                            },
                            {
                                "count": 1,
                                "id": "Duskblade"
                            },
                            {
                                "count": 3,
                                "id": "Potions"
                            }
                        ],
                    "stats": [
                        "health": 1234,
                        "attackDamage": 341,
                        ...
                    ]
                    "lore" : "...",
                    ...
                }
            ]
        }

+ Response 404 (application/json)

        { 
            "result": "no champion with that name"
        }


## Items [/api/items]

*builtOn (list)* : the list of champions that build the item

*gold (dict)* : the cost of the item and its components

*id (integer PK)* : the primary key for identifying the item

*image (string)* : the link to the icon of the item

*into (List)* : the list of items the item can build into

*maps (dict)* : the maps the item can be purchased on

*name (string)* : the name of the item

*sanitizedDescription (string)* : the in-game description of the item

### Get All Items [GET]

*Description: Fetches a list of JSON for all items. (List[dict])*

+ Response 200 (application/json)

        {
            "result": [
                {
                    "builtOn": [
                        "Karma",
                        "Annie
                    ],
                    "maps": {
                        "11": true,
                        "12": true,
                        "10": false
                    },
                    "sanitizedDescription": "+100 Ability Power +400 Mana UNIQUE Passive: +20% Cooldown Reduction UNIQUE Passive: Dealing magic damage to champions below 35% Health inflicts Grievous Wounds for 8 seconds. UNIQUE Passive: Kills and Assists restore 20% of your maximum Mana.",
                    "id": 3165,
                    "name": "Morellonomicon",
                    ...
                },
                {
                    "builtOn": [
                        "Riven",
                        "Malphite"
                    ],
                    "maps": {
                        "11": true,
                        "12": true,
                        "10": false
                    },
                    "sanitizedDescription": "+50 Ability Power +50 Armor +50 Magic Resist UNIQUE Passive - Tenacity: Reduces the duration of stuns, slows, taunts, fears, silences, blinds, polymorphs, and immobilizes by 35%.",
                    "id": 3170,
                    "name": "Moonflair Spellblade",
                    ...
                }, {
                    "etc....": "iteminfo"
                }
            ]
        }
 
+ Response 404 (application/json)

        { 
            "error": "Resource not found"
        }

### Get Specific Item [GET /api/items/{itemName}]

*Description: Fetches a JSON for a specific item. (dict)*

+ Parameter
    + itemName (string, required) - item name separated by %20 with key capitalization for the first letter of each word

+ Response 200 (application/json)

        {
            "result" : [
                {
                    "builtOn": [
                        "ID": "Karma",
                        "ID": "Annie"
                    ],
                    "maps": {
                        "11": true,
                        "12": true,
                        "10": false
                    },
                    "sanitizedDescription": "+100 Ability Power +400 Mana UNIQUE Passive: +20% Cooldown Reduction UNIQUE Passive: Dealing magic damage to champions below 35% Health inflicts Grievous Wounds for 8 seconds. UNIQUE Passive: Kills and Assists restore 20% of your maximum Mana.",
                    "id": 3165,
                    "name": "Morellonomicon",
                    ...
                }
            }
        ]

+ Response 404 (application/json)

        { 
            "result": "no item with that name"
        }


## Get All Maps [/api/maps]
    
*article (dict[dict])* : the article pertaining to the map

*champs (List)* : the champions related to the map

*image (string)* : the URL to the image of the map

*items (List)* : the items related to the map

*mapId (integer PK)* : the primary key for identifying the map

*mapName (string)* : the name of the map

### Get All Maps [GET /api/maps]

*Description: Fetches a list of JSON for all maps. (List[dict])*

+ Response 200 (applicaton/json)

        {
            "result": [
                {
                    "champs": [
                        "Ryze",
                        "Xerath",
                        "Vi",
                        "Skarner"
                    ],
                    "items": [
                        3185,
                        3460,
                        1054
                    ],
                    "image": "http:\/\/ddragon.leagueoflegends.com\/cdn\/7.20.1\/img\/map\/map8.png",
                    "mapId": 8,
                    "mapName": "The Crystal Scar",
                    "article": {
                        ...
                    },
                    ...
                },
                {
                    "champs": [
                        ...
                    ],
                    "items": [
                        ...
                    ],
                    ...
                },
                ...
            ]
        }

+ Response 404 (application/json)

        { 
            "error": "Resource not found"
        }

### Get Specific Map [GET /api/maps/{mapName}]

*Description: Fetches a JSON for a specific map. (dict)*

+ Parameter
    + mapName (string, required) - map name separated by %20 with key capitalization for the first letter of each word
    
+ Response 200 (applicaton/json)

        {
            "result": [
                {
                    "champs": [
                        "Ryze",
                        "Xerath",
                        "Vi",
                        "Skarner"
                    ],
                    "items": [
                        3185,
                        3460,
                        1054
                    ],
                    "image": "http:\/\/ddragon.leagueoflegends.com\/cdn\/7.20.1\/img\/map\/map8.png",
                    "mapId": 8,
                    "mapName": "The Crystal Scar",
                    "article": {
                        ...
                    },
                    ...
                }
            ]
        }
                    
+ Response 404 (application/json)

        { 
            "result": "no map with that name" 
        }


## Match Details [/api/matches/]

*gameCreation (long)* : the time at creation of this match

*gameDuration (integer)* : the duration of the match in seconds

*gameId (long PK)* : the primary key for identifying the match

*gameMode (string)* : the game mode of the match

*gameType (string)* : the type of queue for the match

*gameVersion (string)*: the version the match was played on

*participantIdentities (List[dict])* : the participants in the game

*platformId (string)* : the region this match was played on

*queueId (integer)* : the queue the match was in

*mapId (integer)* : the map this match was played on

*seasonId (integer)* :

*teams (List[dict])* :

### Get All Matches [GET /api/matches]

*Description: Fetches a list of JSON for all matches. (List[dict])*

+ Response 200 (application/json)

        {
            "example": [
                {
                    "seasonId": 9,
                    "gameVersion": "7.20.204.9809",
                    "gameId": 4819434182,
                    "participantIdentities": [
                        {
                            "player": {
                                "currentPlatformId": "NA1",
                                "summonerName": "SevenAster",
                                "matchHistoryUri": "\/v1\/stats\/player_history\/NA1\/230916943",
                                "platformId": "NA1",
                                "currentAccountId": 230916943,
                                "profileIcon": 3010,
                                "summonerId": 71402604,
                                "accountId": 230916943
                            },
                        }
                        {
                            "player": {
                                "etc....." : "adsfasd"
                            },
                            ...
                        }
                    ],
                    "mapId": 11,
                    ...
                },
                {
                    "seasonId": 9,
                    "gameVersion": "7.20.204.9809",
                    "gameId": 4873134859,
                    "participantIdentities": [
                        {
                            ...
                        },
                        ...
                    },
                    "mapId": 11,
                    ...
                },
                ...
            ]
        }
        
+ Response 404 (application/json)

        { 
            "error": "Resource not found"
        }

### Get Specific Match [GET /api/matches/{matchID}]

*Description: Fetches a JSON for a specific match. (dict)*

+ Parameter
    + matchID (integer, required) - ID of the match you are looking up

+ Response 200 (application/json)

        {
            "example": [
                {
                    "seasonId": 9,
                    "gameVersion": "7.20.204.9809",
                    "gameId": 4819434182,
                    "participantIdentities": [
                        {
                            "player": {
                                "currentPlatformId": "NA1",
                                "summonerName": "SevenAster",
                                "matchHistoryUri": "\/v1\/stats\/player_history\/NA1\/230916943",
                                "platformId": "NA1",
                                "currentAccountId": 230916943,
                                "profileIcon": 3010,
                                "summonerId": 71402604,
                                "accountId": 230916943
                            },
                        }
                        {
                            "player": {
                                "etc....." : "adsfasd"
                            },
                            ...
                        }
                    ],
                    "mapId": 11,
                    ...
                }
            ]
        }
        
+ Response 404 (application/json)

        { 
            "result": "no matching match for match ID"
        }